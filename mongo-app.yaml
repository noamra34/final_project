apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-app
  namespace: default
  labels:
    app: mongo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-app
  template:
    metadata:
      labels:
        app: mongo-app
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0.15
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "212551121" # change later
      - name: mongo-express
        image: mongo-express:1.0.2-20-alpine3.19
        ports:
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_SERVER
          value: localhost # Since both containers are in the same Pod, use localhost
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          value: root
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          value: "212551121"
        - name: ME_CONFIG_BASICAUTH_USERNAME
          value: admin
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          value: "123456789"
        - name: ME_CONFIG_OPTIONS_EDITORTHEME
          value: ""
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-data
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-app
  namespace: default
spec:
  selector:
    app: mongo-app
  ports:
  - name: mongodb
    protocol: TCP
    port: 27017
    targetPort: 27017
  - name: mongo-express
    protocol: TCP
    port: 8081
    targetPort: 8081
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
