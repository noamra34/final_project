pipeline{
    agent {
        kubernetes {
            yamlFile = 'build_pods.yaml'
            defaultContainer 'ez-docker-helm-build'
        }
    }

    environment{
        GITHUB_API_URL = 'https://api.github.com'
        GIT_CREDENTIALS_ID = credentials('git_final_project')
        GITHUB_REPO = 'noamra34/Project'
        DOCKER_IMAGE = 'noam476/final_project'

    }
    stages{
        stage("Checkout code"){
            steps{
                checkout scm
            }
        }

        stage("Build docker image"){
            steps{
                script{
                    dockerImage = docker.build("${DOCKER_IMAGE}:v1", "--no-cache .")

                }
            }
        }
        stage("Push docker image"){
            when {
                branch 'main'
            }
            steps{
                script{
                    docker.withRegistry('https://registry.hub.docker.com', 'docker_final_project'){
                        dockerImage.push("latest")
                    }
                }
            }
        }
        stage("Create merge request"){
            when{
                not {
                    branch 'main'
                }
            }
            steps{
                withCredentials([string(credentialsId: 'git_final_project', variable: 'GIT_CREDENTIALS_ID' )]){
                    script {
                        def branchName = env.BRANCH_NAME
                        def pullRequestTitle = "Merge ${branchName} into main"
                        def pullRequestBody = "Automatically generated merge request for branch ${branchName}"

                        sh """
                            curl -X POST -H "Authorization: token ${GIT_CREDENTIALS_ID}" \
                            -d '{ "title": "${pullRequestTitle}", "body": "${pullRequestBody}", "head": "${branchName}, "base": "main" }' \
                            ${GITHUB_API_URL}/repos/${GITHUB_REPO}/pulls
                        """
                    }
                }
            }
        }
    }
}