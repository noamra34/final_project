pipeline{
    agent {
        kubernetes {
            yamlFile = 'build_pods.yaml'
            defaultContainer 'ez-docker-helm-build'
        }
    }

    environment{
        DOCKERHUB_CRED = credentials('docker_final_project')
        GIT_CREDENTIALS_ID = credentials('git_final_project')
        GITHUB_REPO = 'noamra34/Project'
        DOCKERHUB_REPO = 'noam476'
        DOCKER_IMAGE = 'noam476/final_project'
        IMAGE_TAG = "latest"

    }
    stages{
        stage("Checkout code"){
            steps{
                checkout scm
            }
        }

        stage('Create Merge request'){
            steps{
                script{
                    def branchName = env.BRANCH_NAME
                    def mainBranch = "main"
                    def pullRequestTitle = "Merge ${branchName} into ${mainBranch}"
                    def pullRequestBody = "Automatically generated pull request to merge ${branchName} into ${mainBranch}"

                    sh """
                        curl -u $GIT_CREDENTIALS_ID_USR:$GIT_CREDENTIALS_ID_PSW -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${GITHUB_REPO}/pulls -d '{
                            "title": "${pullRequestTitle}",
                            "body": "${pullRequestBody}",
                            "head": "${branchName}",
                            "base": "${mainBranch}"
                        }'
                    """
                }
            }
        }

        stage("Build docker image"){
            steps{
                script{
                    dockerImage = docker.build("${DOCKER_IMAGE}:v1", "--no-cache .")

                }
            }
        }
        stage("Wait for merge request"){
            steps{
                script {
                    waitUntil{
                        script {
                            def response = sh(
                                script: """curl -u $GIT_CREDENTIALS_ID_USR:$GIT_CREDENTIALS_ID_PSW -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/noamra34/project/pulls?state=closed | jq '.[] | select(.title=="${pullRequestTitle}")'""",
                                returnStdout: true
                            ).trim()
                            return response != ""
                        }
                    }
                }

            }
        }
        stage('Build Docker Image'){
            steps{
                script{
                    sh "docker build -t ${env.DOCKERHUB_REPO}:${env.IMAGE_TAG} ."
                }
            }
        }
        stage("Push docker image"){
            when {
                branch 'main'
            }
            steps{
                script{
                    sh """
                        echo $DOCKERHUB_CRED_PSW | docker login -u $DOCKERHUB_CRED_USR --password-stdin
                        docker push ${env.DOCKERHUB_REPO}:${env.IMAGE_TAG}
                    """
                }
            }
        }
    }
}
        